// <auto-generated />
using System;
using AcademicApplication.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcademicApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240130231950_Financeiro_ALunos")]
    partial class Financeiro_ALunos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademicApplication.Data.Entities.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlunoId"));

                    b.Property<string>("CidadeNascimentoAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataExpedicaoRg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSecundarioAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EscolaridadeId")
                        .HasColumnType("int");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoNascimentoAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMaeAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePaiAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocialAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgaoExpedidorRg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfissaoAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessaoTituloEleitor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SexoAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("TelefoneAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneSecundarioAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloEleitor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UfRG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZonaTituloEleitor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlunoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("EscolaridadeId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Boleto", b =>
                {
                    b.Property<int>("BoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoletoId"));

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataGeracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FichaFinanceiraId")
                        .HasColumnType("int");

                    b.Property<int>("Parcela")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BoletoId");

                    b.HasIndex("FichaFinanceiraId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CursoId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusCurso")
                        .HasColumnType("bit");

                    b.Property<string>("TipoCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CursoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Disciplina", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplinaId"));

                    b.Property<string>("AutorDisciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CargaHorariaDisciplina")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeDisciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorDisciplina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DisciplinaId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnderecoId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnderecoId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Escolaridade", b =>
                {
                    b.Property<int>("EscolaridadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EscolaridadeId"));

                    b.Property<string>("CidadeEnsinoFundamental")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CidadeEnsinoMedio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CursoSuperior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataConclusaoEnsinoFundamental")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataConclusaoEnsinoMedio")
                        .HasColumnType("datetime2");

                    b.Property<string>("EscolaEnsinoFundamental")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscolaEnsinoMédio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EscolaridadeAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoEnsinoFundamental")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoEnsinoMedio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstituicaoCursoSuperior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EscolaridadeId");

                    b.ToTable("Escolaridades");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.FichaFinanceira", b =>
                {
                    b.Property<int>("FichaFinanceiraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FichaFinanceiraId"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantidadeParcelas")
                        .HasColumnType("int");

                    b.Property<int>("ValorParcelas")
                        .HasColumnType("int");

                    b.HasKey("FichaFinanceiraId");

                    b.ToTable("FichasFinanceiras");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.FinanceiroAluno", b =>
                {
                    b.Property<int>("FinanceiroAlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinanceiroAlunoId"));

                    b.Property<int>("FichaFinanceiraId")
                        .HasColumnType("int");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.HasKey("FinanceiroAlunoId");

                    b.HasIndex("FichaFinanceiraId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("FinanceirosAlunos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuncionarioId"));

                    b.Property<string>("CpfFuncionario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDesligamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFuncionario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RgFuncionario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("FuncionarioId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Matricula", b =>
                {
                    b.Property<int>("MatriculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MatriculaId"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<string>("ObservacaoMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MatriculaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CursoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("CursoDisciplina", b =>
                {
                    b.Property<int>("CursosCursoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinasDisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("CursosCursoId", "DisciplinasDisciplinaId");

                    b.HasIndex("DisciplinasDisciplinaId");

                    b.ToTable("CursoDisciplina");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Aluno", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.Endereco", "EnderecoAluno")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademicApplication.Data.Entities.Escolaridade", "Escolaridade")
                        .WithMany()
                        .HasForeignKey("EscolaridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnderecoAluno");

                    b.Navigation("Escolaridade");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Boleto", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.FichaFinanceira", "FichaFinanceira")
                        .WithMany("Boletos")
                        .HasForeignKey("FichaFinanceiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FichaFinanceira");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Curso", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.Categoria", "Categoria")
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.FinanceiroAluno", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.FichaFinanceira", "FichaFinanceira")
                        .WithMany()
                        .HasForeignKey("FichaFinanceiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademicApplication.Data.Entities.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FichaFinanceira");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Matricula", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademicApplication.Data.Entities.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademicApplication.Data.Entities.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Curso");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("CursoDisciplina", b =>
                {
                    b.HasOne("AcademicApplication.Data.Entities.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademicApplication.Data.Entities.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DisciplinasDisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.Categoria", b =>
                {
                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("AcademicApplication.Data.Entities.FichaFinanceira", b =>
                {
                    b.Navigation("Boletos");
                });
#pragma warning restore 612, 618
        }
    }
}
